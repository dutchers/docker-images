worker_processes 2;
user www-data www-data;

# Docker Specific. Forces nginx to run in foreground
# Keep it commented out for this project. The log files are part of
# our process.
daemon off;

events {
    worker_connections  2000;
}

http {

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    send_timeout 5;
    client_body_timeout 20;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server_tokens off;
    client_max_body_size 2m;

    include mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log;

    #Add application servers
    upstream app_servers {
        server   127.0.0.1:8080 max_fails=5  fail_timeout=30s;
    }


    gzip on;
    gzip_min_length 1100;
    gzip_types
        text/plain
        text/xml
        text/css
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        image/svg+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype;
    gzip_proxied expired no-cache no-store private auth;
    gzip_vary on;
    gzip_disable "msie6";

    server {
        listen 80;
        root /srv/www;

        error_page 502 503 504      /static/50x.html;
        error_page 403              /static/maintenance.html;

        # doesn't appear to be working will try later
        location / {
            allow all;
            proxy_pass http://app_servers;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Cluster-Client-Ip $remote_addr;

            expires -1;
        }
    }
}
